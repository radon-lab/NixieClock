int8_t wifiScanState = 2; //—Å—Ç–∞—Ç—É—Å —Å–∫–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏—è —Å–µ—Ç–∏
uint8_t wifiStatus = WL_IDLE_STATUS; //—Å—Ç–∞—Ç—É—Å —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è wifi

uint32_t wifiScanTimer = 0; //—Ç–∞–π–º–µ—Ä –Ω–∞—á–∞–ª–∞ –ø–æ–∏—Å–∫–∞ —Å–µ—Ç–∏
uint32_t wifiInterval = 5000; //–∏–Ω—Ç–µ—Ä–≤–∞–ª –ø–µ—Ä–µ–ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ wifi

String wifiScanList = "–ù–µ—Ç —Å–µ—Ç–µ–π"; //—Å–ø–∏—Å–æ–∫ –Ω–∞–π–¥–µ–Ω—ã—Ö wifi —Å–µ—Ç–µ–π

//--------------------------------------------------------------------
String getWifiState(void) {
  String data = "<big><big>";
  if (!settings.ssid[0]) data += "–ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–µ –∏–º—è —Å–µ—Ç–∏!";
  else {
    if (wifiStatus == WL_CONNECTED) data += "–ü–æ–¥–∫–ª—é—á–µ–Ω–æ –∫ \"";
    else if (!wifiInterval) data += "–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–¥–∫–ª—é—á–∏—Ç—å—Å—è –∫ \"";
    else data += "–ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ \"";
    data += String(settings.ssid);
    if ((wifiStatus == WL_CONNECTED) || !wifiInterval) data += "\"";
    else data += "\"...";
  }
  data += "</big></big>";
  return data;
}
//--------------------------------------------------------------------
void wifiScanResult(int networksFound) {
  wifiScanList = "";
  if (networksFound) {
    wifiScanState = -1;
    for (int i = 0; i < networksFound; i++) {
      if (i) wifiScanList += ',';
      wifiScanList += WiFi.SSID(i);
      if (WiFi.encryptionType(i) != ENC_TYPE_NONE) wifiScanList += " üîí";
    }
  }
  else {
    wifiScanState = -2;
    wifiScanList = "–ù–µ—Ç —Å–µ—Ç–µ–π";
  }
}
//--------------------------------------------------------------------
void wifiStartAP(void) {
  //–Ω–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º —Ä–µ–∂–∏–º —Ä–∞–±–æ—Ç—ã
  WiFi.mode(WIFI_AP_STA);
  Serial.println F("");

  //–Ω–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º —Ç–æ—á–∫—É –¥–æ—Å—Ç—É–ø–∞
  IPAddress local(AP_IP);
  IPAddress subnet(255, 255, 255, 0);

  //–∑–∞–¥–∞–µ–º –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ —Å–µ—Ç–∏
  WiFi.softAPConfig(local, local, subnet);

  //–∑–∞–ø—É—Å–∫–∞–µ–º —Ç–æ—á–∫—É –¥–æ—Å—Ç—É–ø–∞
  if (!WiFi.softAP((settings.nameAp) ? (AP_SSID + String(" - ") + settings.name) : AP_SSID, AP_PASS, AP_CHANNEL)) Serial.println F("Wifi access point start failed, wrong settings");
  else {
    Serial.print F("Wifi access point enable, [ ssid: ");
    Serial.print((settings.nameAp) ? (AP_SSID + String(" - ") + settings.name) : AP_SSID);
    if (AP_PASS[0] != '\0') {
      Serial.print F(" ][ pass: ");
      Serial.print(AP_PASS);
    }
    else Serial.print F(" ][ open ");
    Serial.print F(" ][ ip: ");
    Serial.print(WiFi.softAPIP());
    Serial.println F(" ]");
  }

  //–Ω–∞—á–∏–Ω–∞–µ–º –ø–æ–∏—Å–∫ —Å–µ—Ç–µ–π
  WiFi.scanNetworksAsync(wifiScanResult);
}
//--------------------------------------------------------------------
void wifiUpdate(void) {
  static uint32_t timerWifi = millis(); //—Ç–∞–π–º–µ—Ä –ø–æ–ø—ã—Ç–∫–∏ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ wifi

  if ((wifiScanState == 127) && (millis() - wifiScanTimer) >= 100) { //–µ—Å–ª–∏ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –Ω–∞—á–∞—Ç—å –ø–æ–∏—Å–∫
    wifiScanState = 0; //—Å–±—Ä–∞—Å—ã–≤–∞–µ–º —Å—Ç–∞—Ç—É—Å
    WiFi.scanNetworksAsync(wifiScanResult); //–Ω–∞—á–∏–Ω–∞–µ–º –ø–æ–∏—Å–∫
  }

  if (wifiStatus != WiFi.status()) { //–µ—Å–ª–∏ –∏–∑–º–µ–Ω–∏–ª—Å—è —Å—Ç–∞—Ç—É—Å
    if (wifiStatus == 255) { //–µ—Å–ª–∏ –Ω—É–∂–Ω–æ –æ—Ç–∫–ª—é—á–∏—Ç—å—Å—è
      Serial.println F("Wifi disconnecting...");
      ntpStop(); //–æ—Å—Ç–∞–Ω–æ–≤–∏–ª–∏ ntp
      weatherDisconnect(); //–æ—Ç–∫–ª—é—á–∏–ª–∏—Å—å –æ—Ç —Å–µ—Ä–≤–µ—Ä–∞ –ø–æ–≥–æ–¥—ã
      WiFi.disconnect(); //–æ—Ç–∫–ª—é—á–∞–µ–º wifi
      if (WiFi.getMode() != WIFI_AP_STA) wifiStartAP(); //–≤–∫–ª—é—á–∞–µ–º —Ç–æ—á–∫—É –¥–æ—Å—Ç—É–ø–∞
    }
    wifiStatus = WiFi.status();
    switch (wifiStatus) {
      case WL_CONNECTED:
        timerWifi = millis(); //—Å–±—Ä–æ—Å–∏–ª–∏ —Ç–∞–π–º–µ—Ä
        wifiInterval = 300000; //—É—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∏–Ω—Ç–µ—Ä–≤–∞–ª –æ—Ç–∫–ª—é—á–µ–Ω–∏—è —Ç–æ—á–∫–∏ –¥–æ—Å—Ç—É–ø–∞
#if STATUS_LED == 1
        digitalWrite(LED_BUILTIN, HIGH); //–≤—ã–∫–ª—é—á–∞–µ–º –∏–Ω–¥–∏–∫–∞—Ü–∏—é
#endif
        ntpStart(); //–∑–∞–ø—É—Å—Ç–∏—Ç—å ntp
        weatherCheck(); //–∑–∞–ø—Ä–æ—Å–∏—Ç—å –ø—Ä–æ–≥–Ω–æ–∑ –ø–æ–≥–æ–¥—ã

        Serial.print F("Wifi connected, IP address: ");
        Serial.println(WiFi.localIP());
        break;
      case WL_IDLE_STATUS:
#if STATUS_LED == 1
        digitalWrite(LED_BUILTIN, LOW); //–≤–∫–ª—é—á–∞–µ–º –∏–Ω–¥–∏–∫–∞—Ü–∏—é
#endif
        Serial.println F("Wifi idle status");
        break;
      default:
        if ((wifiStatus == WL_DISCONNECTED) || (wifiStatus == WL_NO_SSID_AVAIL)) {
          timerWifi = millis(); //—Å–±—Ä–æ—Å–∏–ª–∏ —Ç–∞–π–º–µ—Ä
          if (wifiStatus == WL_NO_SSID_AVAIL) wifiInterval = 30000; //—É—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∏–Ω—Ç–µ—Ä–≤–∞–ª –ø–µ—Ä–µ–ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è
          else wifiInterval = 5000; //—É—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∏–Ω—Ç–µ—Ä–≤–∞–ª –ø–µ—Ä–µ–ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è
          WiFi.disconnect(); //–æ—Ç–∫–ª—é—á–∞–µ–º wifi
        }
        else {
          wifiInterval = 0; //—Å–±—Ä–∞—Å—ã–≤–∞–µ–º –∏–Ω—Ç–µ—Ä–≤–∞–ª –ø–µ—Ä–µ–ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è
#if STATUS_LED == 1
          digitalWrite(LED_BUILTIN, LOW); //–≤–∫–ª—é—á–∞–µ–º –∏–Ω–¥–∏–∫–∞—Ü–∏—é
#endif
          Serial.println F("Wifi connect error...");
        }
        ntpStop(); //–æ—Å—Ç–∞–Ω–æ–≤–∏–ª–∏ ntp
        weatherDisconnect(); //–æ—Ç–∫–ª—é—á–∏–ª–∏—Å—å –æ—Ç —Å–µ—Ä–≤–µ—Ä–∞ –ø–æ–≥–æ–¥—ã
        break;
    }
  }

  if (wifiInterval && ((millis() - timerWifi) >= wifiInterval)) {
    if (wifiStatus == WL_CONNECTED) { //–µ—Å–ª–∏ –ø–æ–¥–∫–ª—é—á–µ–Ω—ã
      wifiInterval = 0; //—Å–±—Ä–∞—Å—ã–≤–∞–µ–º –∏–Ω—Ç–µ—Ä–≤–∞–ª –ø–µ—Ä–µ–ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è
      WiFi.mode(WIFI_STA); //–æ—Ç–∫–ª—é—á–∏–ª–∏ —Ç–æ—á–∫—É –¥–æ—Å—Ç—É–ø–∞
      Serial.println F("Wifi access point disabled");
    }
    else { //–∏–Ω–∞—á–µ –Ω–æ–≤–æ–µ –ø–æ–∫–ª—é—á–µ–Ω–∏–µ
      wifiStatus = WiFi.begin(settings.ssid, settings.pass); //–ø–æ–¥–∫–ª—é—á–∞–µ–º—Å—è –∫ wifi
      if (wifiStatus != WL_CONNECT_FAILED) {
        timerWifi = millis(); //—Å–±—Ä–æ—Å–∏–ª–∏ —Ç–∞–π–º–µ—Ä
        wifiInterval = 30000; //—É—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∏–Ω—Ç–µ—Ä–≤–∞–ª –ø–µ—Ä–µ–ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è
        Serial.print F("Wifi connecting to \"");
        Serial.print(settings.ssid);
        Serial.println F("\"...");
      }
      else {
        wifiInterval = 0; //—Å–±—Ä–∞—Å—ã–≤–∞–µ–º –∏–Ω—Ç–µ—Ä–≤–∞–ª
#if STATUS_LED == 1
        digitalWrite(LED_BUILTIN, LOW); //–≤–∫–ª—é—á–∞–µ–º –∏–Ω–¥–∏–∫–∞—Ü–∏—é
#endif
        Serial.println F("Wifi connection failed, wrong settings");
      }
    }
  }
}
